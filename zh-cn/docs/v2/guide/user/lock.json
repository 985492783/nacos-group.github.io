{
  "filename": "lock.md",
  "__html": "<h1>分布式锁</h1>\n<blockquote>\n<p>nacos lock分布式锁从3.0版本开始支持</p>\n</blockquote>\n<h2>参数</h2>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>默认值</th>\n<th>启止版本</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>nacos.lock.default_expire_time</td>\n<td>30000</td>\n<td>3.0.0 ~ latest</td>\n<td>默认超时时间</td>\n</tr>\n<tr>\n<td>nacos.lock.max_expire_time</td>\n<td>1800000</td>\n<td>3.0.0 ~ latest</td>\n<td>最大超时时间</td>\n</tr>\n</tbody>\n</table>\n<h2>分布式锁场景</h2>\n<p>分布式定时任务，同时只有一个客户端能获取分布式锁，获取锁失败的客户端不进行任何操作，获取到锁的客户端进行业务操作，在超时时间内完成操作并且释放该锁。</p>\n<h2>接口说明</h2>\n<h3>分布式锁实例</h3>\n<p>通过spi插件化设计成可拓展的分布式锁，例如锁重入，服务端心跳探测等等功能将会在插件中实现不同的分布式锁处理方案。</p>\n<blockquote>\n<p><code>LockInstance</code>结构<br>\nNacos通过 lockType和key两个参数组成的<code>LockKey</code> 在集群中确认唯一的锁实例</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性名</th>\n<th style=\"text-align:left\">属性类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">key</td>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">锁名，同一业务场景的锁名称应该一致</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">expireTimestamp</td>\n<td style=\"text-align:left\">Long</td>\n<td style=\"text-align:left\">锁自动超时时间，默认为30s</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">params</td>\n<td style=\"text-align:left\">Map&lt;String, ? extends Serializable&gt;</td>\n<td style=\"text-align:left\">额外参数，用于插件设计时传入特殊参数进行处理</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">lockType</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">锁类型，用于获取锁真实处理方案，默认为NACOS_LOCK</td>\n</tr>\n</tbody>\n</table>\n<h3>锁的获取与释放</h3>\n<h4>分布式锁获取</h4>\n<h5>描述</h5>\n<p>用于服务获取分布式锁</p>\n<pre><code class=\"language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Boolean <span class=\"hljs-title\">lock</span><span class=\"hljs-params\">(LockInstance instance)</span><span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<p>请求参数</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名</th>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">instance</td>\n<td style=\"text-align:left\">LockInstance</td>\n<td style=\"text-align:left\">锁实例，用于传输锁的唯一标识，超时时间以及参数</td>\n</tr>\n</tbody>\n</table>\n<p>返回值</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">是否成功</td>\n</tr>\n</tbody>\n</table>\n<p>异常说明</p>\n<p>获取锁超时或网络异常，抛出 NacosException 异常。</p>\n<h4>分布式锁释放</h4>\n<h5>描述</h5>\n<p>用于服务释放分布式锁</p>\n<pre><code class=\"language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Boolean <span class=\"hljs-title\">unLock</span><span class=\"hljs-params\">(LockInstance instance)</span><span class=\"hljs-keyword\">throws</span> NacosException</span>;\n</code></pre>\n<p>请求参数</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数名</th>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">instance</td>\n<td style=\"text-align:left\">LockInstance</td>\n<td style=\"text-align:left\">锁实例，用于传输锁的唯一标识，超时时间以及参数</td>\n</tr>\n</tbody>\n</table>\n<p>返回值</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">是否成功</td>\n</tr>\n</tbody>\n</table>\n<p>异常说明</p>\n<p>释放锁超时或网络异常，抛出 NacosException 异常。</p>\n<h2>使用方式</h2>\n<h3>依赖</h3>\n<blockquote>\n<p>引入nacos-client<br>\n详情见<a href=\"./sdk.md\">Java的SDK</a></p>\n</blockquote>\n<p>Maven 坐标</p>\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba.nacos&lt;/groupId&gt;\n    &lt;artifactId&gt;nacos-client&lt;/artifactId&gt;\n    &lt;version&gt;${latest.version}&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n<pre><code class=\"language-java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Main</span> </span>{\n    \n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">(String[] args)</span> <span class=\"hljs-keyword\">throws</span> NacosException </span>{\n        Properties properties = <span class=\"hljs-keyword\">new</span> Properties();\n        properties.setProperty(<span class=\"hljs-string\">\"serverAddr\"</span>, <span class=\"hljs-string\">\"localhost\"</span>);\n        LockService lockService = NacosFactory.createLockService(properties);\n        NLock nLock = NLockFactory.getLock(<span class=\"hljs-string\">\"key\"</span>);\n        <span class=\"hljs-comment\">//try lock</span>\n        Boolean lock = lockService.lock(nLock);\n        <span class=\"hljs-keyword\">if</span> (Boolean.TRUE.equals(lock)) {\n            <span class=\"hljs-keyword\">try</span> {\n                <span class=\"hljs-comment\">//do something</span>\n            } <span class=\"hljs-keyword\">finally</span> {\n                <span class=\"hljs-comment\">//release lock</span>\n                lockService.unLock(nLock);\n            }\n        }\n    }\n}\n</code></pre>\n",
  "link": "\\zh-cn\\docs\\v2\\guide\\user\\lock.html",
  "meta": {
    "title": "DistributedLock",
    "keywords": "DistributedLock",
    "description": "DistributedLock"
  }
}